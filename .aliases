#!/bin/bash
# -*- SH -*-

## Aliases from ~/.bashrc in Ubuntu 20.04
# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Use aliases when using sudo
alias sudo='sudo '

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias isomount='fuseiso'
alias umount='fusermount -u'

if which peco >/dev/null 2>&1; then
    podman() {
        if [ $# -eq 0 ]; then
            set "$(echo exec rm rmi start stop stop-rm | tr ' ' '\n' | peco)"
        fi
        case $1 in
            exec)
                shift
                command podman exec -it "$(command podman ps --noheading | peco | awk '{print $1}')" "${@:-/bin/bash}"
                ;;
            logs)
                shift
                # shellcheck disable=SC2068
                command podman logs -f ${@:-$(command podman ps --noheading | peco | awk '{print $1}')}
                ;;
            pod)
                shift
                podman_pod "$@"
                ;;
            rm)
                shift
                # shellcheck disable=SC2068
                command podman rm ${@:-$(command podman ps --noheading --filter status=exited | peco | awk '{print $1}')}
                ;;
            rmi)
                shift
                # shellcheck disable=SC2068
                command podman rmi ${@:-$(command podman images --noheading | peco | awk '{print $1}')}
                ;;
            start)
                shift
                # shellcheck disable=SC2068
                command podman start ${@:-$(command podman ps --noheading --filter status=exited | peco | awk '{print $1}')}
                ;;
            stop)
                shift
                # shellcheck disable=SC2068
                command podman stop ${@:-$(command podman ps --noheading | peco | awk '{print $1}')}
                ;;
            stop-rm)
                shift
                # shellcheck disable=SC2046,SC2068
                command podman rm $(command podman stop ${@:-$(command podman ps --noheading | peco | awk '{print $1}' | tr '\n' ' ')})
                ;;
            *)
                command podman "$@"
                ;;
        esac
    }
    podman_pod() {
        case $1 in
            logs)
                shift
                # shellcheck disable=SC2068
                command podman pod logs -f ${@:-$(command podman pod ps --noheading | peco | awk '{print $1}')}
                ;;
            rm)
                shift
                # shellcheck disable=SC2068
                command podman pod rm ${@:-$(command podman pod ps --noheading --filter status=exited | peco | awk '{print $1}' | tr '\n' ' ')}
                ;;
            start)
                shift
                # shellcheck disable=SC2068
                command podman pod start ${@:-$(command podman pod ps --noheading | peco | awk '{print $1}' | tr '\n' ' ')}
                ;;
            stop)
                shift
                # shellcheck disable=SC2068
                command podman pod stop ${@:-$(command podman pod ps --noheading | peco | awk '{print $1}' | tr '\n' ' ')}
                ;;
            stop-rm)
                shift
                # shellcheck disable=SC2046,SC2068
                command podman pod rm $(podman pod stop ${@:-$(command podman pod ps --noheading | peco | awk '{print $1}' | tr '\n' ' ')})
                ;;
            *)
                command podman pod "$@"
                ;;
        esac
    }
fi
alias docker='podman'

alias g='git'

# Change directory by search
peco_cd() {
    cd "$(find "${1:-.}" -type d -maxdepth 5 2>/dev/null | peco)" || return
}
alias pcd='peco_cd'

peco_history() {
    history -n -r 1 | peco --layout=bottom-up --query "$1"
}
alias ph='$(peco_history)'

# Kill processes by search
kill() {
    # shellcheck disable=SC2068
    builtin kill ${@:-$(ps afhx -o user,pid,%cpu,%mem,command | peco | tr -s ' ' | awk '{print $2; system("cat /proc/" $2 "/cmdline 2>/dev/null | xargs -0 echo killed: " $2 ": >&2")}')}
}

# GnuPG aliases
alias encrypt='gpg -es'
alias decrypt='gpg -d'
alias enc='encrypt'
alias dec='decrypt'
# Delete key files not in keybox.
alias gpg-clean='(\
    cd $(gpgconf --list-dir homedir)/private-keys-v1.d; \
    comm \
        <(gpg --list-secret-keys --with-keygrip | grep Keygrip | awk "{ print \$3 \".key\" }" | sort) \
        <(ls) -13 \
    | xargs -I{} rm "$(pwd)/{}"\
)'

if uname -a | grep -q WSL; then
    alias clip='clip.exe'
    alias getclip='powershell.exe -command "Get-Clipboard" 2> /dev/null'
fi
